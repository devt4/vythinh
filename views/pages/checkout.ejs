<section id="product-wrapper">


  <div class="wrapper">
    <div class="inner">

      <h1>Giỏ hàng</h1>

      <div class="shopping-cart">

        <div class="column-labels">
          <label class="product-image">Image</label>
          <label class="product-details">Product</label>
          <label class="product-quantity">Quantity</label>
          <label class="product-removal">Remove</label>
          <label class="product-line-price">Total</label>
        </div>

        <div id="list-product">

        </div>


        <div class="totals">
          <!-- <div class="totals-item">
            <label>Tổng giá</label>
            <div class="totals-value" id="cart-subtotal"></div>
          </div> -->
          <!-- <div class="totals-item">
            <label>Tax (5%)</label>
            <div class="totals-value" id="cart-tax">3.60</div>
          </div> -->
          <div class="totals-item">
            <label>Phí ship</label>
            <div class="totals-value" id="cart-shipping">0đ</div>
          </div>
          <div class="totals-item totals-item-total">
            <label>Tổng tiên</label>
            <div class="totals-value" id="cart-total"></div>
          </div>
        </div>

        <a href="/order" class="checkout" style="padding:10px; color: white; cursor: pointer; background-color: rgb(86, 180, 239);">Thanh Toán</a>

      </div>

    </div>
  </div>
  </div>
</section>




<style>
  /* Global settings */

  .product-image {
    float: left;
    width: 20%;
  }

  .product-details {
    float: left;
    width: 37%;
  }

  .product-price {
    float: left;
    width: 12%;
  }

  .product-quantity {
    float: left;
    width: 10%;
  }

  .product-removal {
    float: left;
    width: 9%;
  }

  .product-line-price {
    float: left;
    width: 12%;
    text-align: right;
  }

  /* This is used as the traditional .clearfix class */
  .group:before,
  .shopping-cart:before,
  .column-labels:before,
  .product:before,
  .totals-item:before,
  .group:after,
  .shopping-cart:after,
  .column-labels:after,
  .product:after,
  .totals-item:after {
    content: '';
    display: table;
  }

  .group:after,
  .shopping-cart:after,
  .column-labels:after,
  .product:after,
  .totals-item:after {
    clear: both;
  }

  .group,
  .shopping-cart,
  .column-labels,
  .product,
  .totals-item {
    zoom: 1;
  }

  /* Apply clearfix in a few places */
  /* Apply dollar signs */
  .product .product-price:before,
  .product .product-line-price:before,
  .totals-value:before {
    
  }


  h1 {
    font-weight: 100;
  }

  label {
    color: #aaa;
  }

  .shopping-cart {
    margin-top: -45px;
  }

  /* Column headers */
  .column-labels label {
    padding-bottom: 15px;
    margin-bottom: 15px;
    border-bottom: 1px solid #eee;
  }

  .column-labels .product-image,
  .column-labels .product-details,
  .column-labels .product-removal {
    text-indent: -9999px;
  }

  /* Product entries */
  .product {
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
  }

  .product .product-image {
    text-align: center;
  }

  .product .product-image img {
    width: 100px;
  }

  .product .product-details .product-title {
    margin-right: 20px;
    font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium";
  }

  .product .product-details .product-description {
    margin: 5px 20px 5px 0;
    line-height: 1.4em;
  }

  .product .product-quantity input {
    width: 40px;
  }

  .product .remove-product {
    border: 0;
    padding: 4px 8px;
    background-color: #c66;
    color: #fff;
    font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium";
    font-size: 12px;
    border-radius: 3px;
  }

  .product .remove-product:hover {
    background-color: #a44;
  }

  /* Totals section */
  .totals .totals-item {
    float: right;
    clear: both;
    width: 100%;
    margin-bottom: 10px;
  }

  .totals .totals-item label {
    float: left;
    clear: both;
    width: 79%;
    text-align: right;
  }

  .totals .totals-item .totals-value {
    float: right;
    width: 21%;
    text-align: right;
  }

  .totals .totals-item-total {
    font-family: "HelveticaNeue-Medium", "Helvetica Neue Medium";
  }

  .checkout {
    float: right;
    border: 0;
    margin-top: 20px;
    padding: 6px 25px;
    background-color: #6b6;
    color: #fff;
    font-size: 25px;
    border-radius: 3px;
  }

  .checkout:hover {
    background-color: #494;
  }

  /* Make adjustments for tablet */
  @media screen and (max-width: 650px) {
    .shopping-cart {
      margin: 0;
      padding-top: 20px;
      border-top: 1px solid #eee;
    }

    .column-labels {
      display: none;
    }

    .product-image {
      float: right;
      width: auto;
    }

    .product-image img {
      margin: 0 0 10px 10px;
    }

    .product-details {
      float: none;
      margin-bottom: 10px;
      width: auto;
    }

    .product-price {
      clear: both;
      width: 70px;
    }

    .product-quantity {
      width: 100px;
    }

    .product-quantity input {
      margin-left: 20px;
    }

    .product-quantity:before {
      content: 'x';
    }

    .product-removal {
      width: auto;
    }

    .product-line-price {
      float: right;
      width: 70px;
    }
  }

  /* Make more adjustments for phone */
  @media screen and (max-width: 350px) {
    .product-removal {
      float: right;
    }

    .product-line-price {
      float: right;
      clear: left;
      width: auto;
      margin-top: 10px;
    }

    .product .product-line-price:before {
      content: 'Item Total: $';
    }

    .totals .totals-item label {
      width: 60%;
    }

    .totals .totals-item .totals-value {
      width: 40%;
    }
  }

  
</style>

<script>
  function saveToLocalStorage(key, data) {
    localStorage.setItem(key, JSON.stringify(data));
  }
  function renderTable() {
    let carts = getFromLocalStorage("carts")
    let htmlString = '';
    let sum = 0;
    carts.forEach(element => {
      sum +=element.price*element.soluong
      htmlString += `        <div class="product">
          <div class="product-image">
            <img src="${element.image}">
          </div>
          <div class="product-details">
            <div class="product-title">${element.name}</div>
          </div>
          <div class="product-quantity">
            <input onblur="handleChangeSL('${element.id}','${element.color}')" type="number" value=${element.soluong} min="1">
          </div>
          <div class="product-removal">
            <button onclick="removeItem('${element.id}','${element.color}')" class="remove-product">
              Remove
            </button>
          </div>
          <div class="">${element.price}đ</div>
        </div>`
    });

    document.getElementById("list-product").innerHTML = htmlString
    document.getElementById("cart-total").innerText=sum
  }

  window.onload = renderTable()

</script>